---

#requires following env variables
# HOST: host to connect to, can be defined in inventory file. e.g. user@host or host
# NEXTJS_REPO_ID: org/repo 
# NEXTJS_REPO_BRANCH: branch to checkout
# STRAPI_REPO_ID: org/repo
# STRAPI_REPO_BRANCH: branch to checkout
# GH_USER: github username
# GH_TOKEN: github token
# NEXTJS_ENV the env to use for nextjs
# STRAPI_ENV the env to use for strapi
# PRODUCTION: whether to build or run in development mode (true/false)


- hosts: "{{ HOST }}"
  gather_facts: false

  vars:
    PRODUCTION: "false"
    DEVELOPMENT: "true"

  tasks:
    - name: debug production env
      debug:
        var: PRODUCTION

    - name: wait for connection
      wait_for_connection:
        delay: 5
        timeout: 600    

    - name: print branch
      debug:
        var: BRANCH

    - name: checkout nextjs repo for development
      git:
        repo: https://{{ GH_USER }}:{{ GH_TOKEN }}@github.com/{{ NEXTJS_REPO_ID }}
        dest: ~/nextjs
        version: "main"
        force: true
        recursive: yes
        clone: yes
        single_branch: yes
        depth: 1
      when: DEVELOPMENT and BRANCH == "development"
      #register: nextjs_repo

    - name: checkout nextjs repo for production
      git:
        repo: https://{{ GH_USER }}:{{ GH_TOKEN }}@github.com/{{ NEXTJS_REPO_ID }}
        dest: ~/nextjs-prod
        version: "production"
        force: true
        recursive: yes
        clone: yes
        single_branch: yes
        depth: 1
      when: PRODUCTION and BRANCH == "production"

    - name: checkout strapi repo for development
      git:
        repo: https://{{ GH_USER }}:{{ GH_TOKEN }}@github.com/{{ STRAPI_REPO_ID }}
        dest: ~/strapi
        version: "main"
        force: true
        recursive: yes
        clone: yes
        single_branch: yes
        depth: 1
      when: DEVELOPMENT and BRANCH == "development"
      #register: strapi_repo

    - name: checkout strapi repo for production
      git:
        repo: https://{{ GH_USER }}:{{ GH_TOKEN }}@github.com/{{ STRAPI_REPO_ID }}
        dest: ~/strapi-prod
        version: "production"
        force: true
        recursive: yes
        clone: yes
        single_branch: yes
        depth: 1
      when: PRODUCTION and BRANCH == "production"
      #register: strapi_repo

    - name: install pm2 using npm
      become: yes
      become_user: bitnami
      shell:
        cmd: sudo npm install pm2 -g
        executable: /bin/bash

    - name: install deps for nextjs development
      npm:
        path: ~/nextjs
        production: no
        registry: https://registry.npmjs.org/
      when: DEVELOPMENT and BRANCH == "development"

    - name: install deps for nextjs production
      npm:
        path: ~/nextjs-prod
        production: yes
        registry: https://registry.npmjs.org/
      when: PRODUCTION and BRANCH == "production"

    - name: install deps for strapi development
      npm:
        path: ~/strapi
        production: no
        registry: https://registry.npmjs.org/
      when: DEVELOPMENT and BRANCH == "development"

    - name: install deps for strapi production
      npm:
        path: ~/strapi-prod
        production: yes
        registry: https://registry.npmjs.org/
      when: PRODUCTION and BRANCH == "production"

    - name: delete old pm2 processes
      become_user: bitnami
      command: pm2 delete all
      ignore_errors: yes

    - name: create nextjs dev template
      become: true
      become_user: bitnami
      template:
        src: run-nextjs-dev.sh
        dest: ~/nextjs
        mode: 0755
      when: DEVELOPMENT and BRANCH == "development"

    - name: create nextjs prod template
      become: true
      become_user: bitnami
      template:
        src: run-nextjs.sh
        dest: ~/nextjs-prod
        mode: 0755
      when: PRODUCTION and BRANCH == "production"

    - name: create strapi dev template
      become: true
      become_user: bitnami
      template:
        src: run-strapi-dev.sh
        dest: ~/strapi
        mode: 0755
      when: DEVELOPMENT and BRANCH == "development"

    - name: create strapi prod template
      become: true
      become_user: bitnami
      template:
        src: run-strapi.sh
        dest: ~/strapi-prod
        mode: 0755
      when: PRODUCTION and BRANCH == "production"

    - name: start nextjs in production mode with pm2
      become_user: bitnami
      command: pm2 start run-nextjs.sh --name "nextjs-prod"
      args:
        chdir: ~/nextjs-prod
      when: PRODUCTION and BRANCH == "production"

    - name: start nextjs in development mode with pm2
      become_user: bitnami
      command: pm2 start run-nextjs-dev.sh --name "nextjs-dev"
      args:
        chdir: ~/nextjs
      when: DEVELOPMENT and BRANCH == "development"

    - name: start strapi in production mode with pm2
      become_user: bitnami
      command: pm2 start run-strapi.sh --name "strapi-prod"
      args:
        chdir: ~/strapi-prod
      when: PRODUCTION and BRANCH == "production"
      
    - name: start strapi in development mode with pm2
      become_user: bitnami
      command: pm2 start run-strapi-dev.sh --name "strapi-dev"
      args:
        chdir: ~/strapi
      when: DEVELOPMENT and BRANCH == "development"